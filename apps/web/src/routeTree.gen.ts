/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LocaleRouteRouteImport } from './routes/$locale/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApiSearchRouteImport } from './routes/api/search'
import { Route as LocalePhotoRouteImport } from './routes/$locale/photo'
import { Route as LocaleRootLayoutRouteRouteImport } from './routes/$locale/_root-layout/route'
import { Route as LocaleDocsRouteRouteImport } from './routes/$locale/_docs/route'
import { Route as LocaleRootLayoutIndexRouteImport } from './routes/$locale/_root-layout/index'
import { Route as LocaleRootLayoutUploadRouteImport } from './routes/$locale/_root-layout/upload'
import { Route as LocaleRootLayoutGalleryRouteImport } from './routes/$locale/_root-layout/gallery'
import { Route as LocaleRootLayoutSettingsRouteRouteImport } from './routes/$locale/_root-layout/settings/route'
import { Route as LocaleRootLayoutSettingsIndexRouteImport } from './routes/$locale/_root-layout/settings/index'
import { Route as LocaleRootLayoutSettingsUploadRouteImport } from './routes/$locale/_root-layout/settings/upload'
import { Route as LocaleRootLayoutSettingsS3RouteImport } from './routes/$locale/_root-layout/settings/s3'
import { Route as LocaleRootLayoutSettingsProfileRouteImport } from './routes/$locale/_root-layout/settings/profile'
import { Route as LocaleRootLayoutSettingsGalleryRouteImport } from './routes/$locale/_root-layout/settings/gallery'
import { Route as LocaleDocsDocsSplatRouteImport } from './routes/$locale/_docs/docs/$'

const LocaleRouteRoute = LocaleRouteRouteImport.update({
  id: '/$locale',
  path: '/$locale',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSearchRoute = ApiSearchRouteImport.update({
  id: '/api/search',
  path: '/api/search',
  getParentRoute: () => rootRouteImport,
} as any)
const LocalePhotoRoute = LocalePhotoRouteImport.update({
  id: '/photo',
  path: '/photo',
  getParentRoute: () => LocaleRouteRoute,
} as any)
const LocaleRootLayoutRouteRoute = LocaleRootLayoutRouteRouteImport.update({
  id: '/_root-layout',
  getParentRoute: () => LocaleRouteRoute,
} as any)
const LocaleDocsRouteRoute = LocaleDocsRouteRouteImport.update({
  id: '/_docs',
  getParentRoute: () => LocaleRouteRoute,
} as any)
const LocaleRootLayoutIndexRoute = LocaleRootLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleRootLayoutRouteRoute,
} as any)
const LocaleRootLayoutUploadRoute = LocaleRootLayoutUploadRouteImport.update({
  id: '/upload',
  path: '/upload',
  getParentRoute: () => LocaleRootLayoutRouteRoute,
} as any)
const LocaleRootLayoutGalleryRoute = LocaleRootLayoutGalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => LocaleRootLayoutRouteRoute,
} as any)
const LocaleRootLayoutSettingsRouteRoute =
  LocaleRootLayoutSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => LocaleRootLayoutRouteRoute,
  } as any)
const LocaleRootLayoutSettingsIndexRoute =
  LocaleRootLayoutSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LocaleRootLayoutSettingsRouteRoute,
  } as any)
const LocaleRootLayoutSettingsUploadRoute =
  LocaleRootLayoutSettingsUploadRouteImport.update({
    id: '/upload',
    path: '/upload',
    getParentRoute: () => LocaleRootLayoutSettingsRouteRoute,
  } as any)
const LocaleRootLayoutSettingsS3Route =
  LocaleRootLayoutSettingsS3RouteImport.update({
    id: '/s3',
    path: '/s3',
    getParentRoute: () => LocaleRootLayoutSettingsRouteRoute,
  } as any)
const LocaleRootLayoutSettingsProfileRoute =
  LocaleRootLayoutSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => LocaleRootLayoutSettingsRouteRoute,
  } as any)
const LocaleRootLayoutSettingsGalleryRoute =
  LocaleRootLayoutSettingsGalleryRouteImport.update({
    id: '/gallery',
    path: '/gallery',
    getParentRoute: () => LocaleRootLayoutSettingsRouteRoute,
  } as any)
const LocaleDocsDocsSplatRoute = LocaleDocsDocsSplatRouteImport.update({
  id: '/docs/$',
  path: '/docs/$',
  getParentRoute: () => LocaleDocsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRootLayoutRouteRouteWithChildren
  '/$locale/photo': typeof LocalePhotoRoute
  '/api/search': typeof ApiSearchRoute
  '/$locale/settings': typeof LocaleRootLayoutSettingsRouteRouteWithChildren
  '/$locale/gallery': typeof LocaleRootLayoutGalleryRoute
  '/$locale/upload': typeof LocaleRootLayoutUploadRoute
  '/$locale/': typeof LocaleRootLayoutIndexRoute
  '/$locale/docs/$': typeof LocaleDocsDocsSplatRoute
  '/$locale/settings/gallery': typeof LocaleRootLayoutSettingsGalleryRoute
  '/$locale/settings/profile': typeof LocaleRootLayoutSettingsProfileRoute
  '/$locale/settings/s3': typeof LocaleRootLayoutSettingsS3Route
  '/$locale/settings/upload': typeof LocaleRootLayoutSettingsUploadRoute
  '/$locale/settings/': typeof LocaleRootLayoutSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRootLayoutIndexRoute
  '/$locale/photo': typeof LocalePhotoRoute
  '/api/search': typeof ApiSearchRoute
  '/$locale/gallery': typeof LocaleRootLayoutGalleryRoute
  '/$locale/upload': typeof LocaleRootLayoutUploadRoute
  '/$locale/docs/$': typeof LocaleDocsDocsSplatRoute
  '/$locale/settings/gallery': typeof LocaleRootLayoutSettingsGalleryRoute
  '/$locale/settings/profile': typeof LocaleRootLayoutSettingsProfileRoute
  '/$locale/settings/s3': typeof LocaleRootLayoutSettingsS3Route
  '/$locale/settings/upload': typeof LocaleRootLayoutSettingsUploadRoute
  '/$locale/settings': typeof LocaleRootLayoutSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRouteRouteWithChildren
  '/$locale/_docs': typeof LocaleDocsRouteRouteWithChildren
  '/$locale/_root-layout': typeof LocaleRootLayoutRouteRouteWithChildren
  '/$locale/photo': typeof LocalePhotoRoute
  '/api/search': typeof ApiSearchRoute
  '/$locale/_root-layout/settings': typeof LocaleRootLayoutSettingsRouteRouteWithChildren
  '/$locale/_root-layout/gallery': typeof LocaleRootLayoutGalleryRoute
  '/$locale/_root-layout/upload': typeof LocaleRootLayoutUploadRoute
  '/$locale/_root-layout/': typeof LocaleRootLayoutIndexRoute
  '/$locale/_docs/docs/$': typeof LocaleDocsDocsSplatRoute
  '/$locale/_root-layout/settings/gallery': typeof LocaleRootLayoutSettingsGalleryRoute
  '/$locale/_root-layout/settings/profile': typeof LocaleRootLayoutSettingsProfileRoute
  '/$locale/_root-layout/settings/s3': typeof LocaleRootLayoutSettingsS3Route
  '/$locale/_root-layout/settings/upload': typeof LocaleRootLayoutSettingsUploadRoute
  '/$locale/_root-layout/settings/': typeof LocaleRootLayoutSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$locale'
    | '/$locale/photo'
    | '/api/search'
    | '/$locale/settings'
    | '/$locale/gallery'
    | '/$locale/upload'
    | '/$locale/'
    | '/$locale/docs/$'
    | '/$locale/settings/gallery'
    | '/$locale/settings/profile'
    | '/$locale/settings/s3'
    | '/$locale/settings/upload'
    | '/$locale/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$locale'
    | '/$locale/photo'
    | '/api/search'
    | '/$locale/gallery'
    | '/$locale/upload'
    | '/$locale/docs/$'
    | '/$locale/settings/gallery'
    | '/$locale/settings/profile'
    | '/$locale/settings/s3'
    | '/$locale/settings/upload'
    | '/$locale/settings'
  id:
    | '__root__'
    | '/'
    | '/$locale'
    | '/$locale/_docs'
    | '/$locale/_root-layout'
    | '/$locale/photo'
    | '/api/search'
    | '/$locale/_root-layout/settings'
    | '/$locale/_root-layout/gallery'
    | '/$locale/_root-layout/upload'
    | '/$locale/_root-layout/'
    | '/$locale/_docs/docs/$'
    | '/$locale/_root-layout/settings/gallery'
    | '/$locale/_root-layout/settings/profile'
    | '/$locale/_root-layout/settings/s3'
    | '/$locale/_root-layout/settings/upload'
    | '/$locale/_root-layout/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocaleRouteRoute: typeof LocaleRouteRouteWithChildren
  ApiSearchRoute: typeof ApiSearchRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale': {
      id: '/$locale'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/search': {
      id: '/api/search'
      path: '/api/search'
      fullPath: '/api/search'
      preLoaderRoute: typeof ApiSearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/photo': {
      id: '/$locale/photo'
      path: '/photo'
      fullPath: '/$locale/photo'
      preLoaderRoute: typeof LocalePhotoRouteImport
      parentRoute: typeof LocaleRouteRoute
    }
    '/$locale/_root-layout': {
      id: '/$locale/_root-layout'
      path: ''
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleRootLayoutRouteRouteImport
      parentRoute: typeof LocaleRouteRoute
    }
    '/$locale/_docs': {
      id: '/$locale/_docs'
      path: ''
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleDocsRouteRouteImport
      parentRoute: typeof LocaleRouteRoute
    }
    '/$locale/_root-layout/': {
      id: '/$locale/_root-layout/'
      path: '/'
      fullPath: '/$locale/'
      preLoaderRoute: typeof LocaleRootLayoutIndexRouteImport
      parentRoute: typeof LocaleRootLayoutRouteRoute
    }
    '/$locale/_root-layout/upload': {
      id: '/$locale/_root-layout/upload'
      path: '/upload'
      fullPath: '/$locale/upload'
      preLoaderRoute: typeof LocaleRootLayoutUploadRouteImport
      parentRoute: typeof LocaleRootLayoutRouteRoute
    }
    '/$locale/_root-layout/gallery': {
      id: '/$locale/_root-layout/gallery'
      path: '/gallery'
      fullPath: '/$locale/gallery'
      preLoaderRoute: typeof LocaleRootLayoutGalleryRouteImport
      parentRoute: typeof LocaleRootLayoutRouteRoute
    }
    '/$locale/_root-layout/settings': {
      id: '/$locale/_root-layout/settings'
      path: '/settings'
      fullPath: '/$locale/settings'
      preLoaderRoute: typeof LocaleRootLayoutSettingsRouteRouteImport
      parentRoute: typeof LocaleRootLayoutRouteRoute
    }
    '/$locale/_root-layout/settings/': {
      id: '/$locale/_root-layout/settings/'
      path: '/'
      fullPath: '/$locale/settings/'
      preLoaderRoute: typeof LocaleRootLayoutSettingsIndexRouteImport
      parentRoute: typeof LocaleRootLayoutSettingsRouteRoute
    }
    '/$locale/_root-layout/settings/upload': {
      id: '/$locale/_root-layout/settings/upload'
      path: '/upload'
      fullPath: '/$locale/settings/upload'
      preLoaderRoute: typeof LocaleRootLayoutSettingsUploadRouteImport
      parentRoute: typeof LocaleRootLayoutSettingsRouteRoute
    }
    '/$locale/_root-layout/settings/s3': {
      id: '/$locale/_root-layout/settings/s3'
      path: '/s3'
      fullPath: '/$locale/settings/s3'
      preLoaderRoute: typeof LocaleRootLayoutSettingsS3RouteImport
      parentRoute: typeof LocaleRootLayoutSettingsRouteRoute
    }
    '/$locale/_root-layout/settings/profile': {
      id: '/$locale/_root-layout/settings/profile'
      path: '/profile'
      fullPath: '/$locale/settings/profile'
      preLoaderRoute: typeof LocaleRootLayoutSettingsProfileRouteImport
      parentRoute: typeof LocaleRootLayoutSettingsRouteRoute
    }
    '/$locale/_root-layout/settings/gallery': {
      id: '/$locale/_root-layout/settings/gallery'
      path: '/gallery'
      fullPath: '/$locale/settings/gallery'
      preLoaderRoute: typeof LocaleRootLayoutSettingsGalleryRouteImport
      parentRoute: typeof LocaleRootLayoutSettingsRouteRoute
    }
    '/$locale/_docs/docs/$': {
      id: '/$locale/_docs/docs/$'
      path: '/docs/$'
      fullPath: '/$locale/docs/$'
      preLoaderRoute: typeof LocaleDocsDocsSplatRouteImport
      parentRoute: typeof LocaleDocsRouteRoute
    }
  }
}

interface LocaleDocsRouteRouteChildren {
  LocaleDocsDocsSplatRoute: typeof LocaleDocsDocsSplatRoute
}

const LocaleDocsRouteRouteChildren: LocaleDocsRouteRouteChildren = {
  LocaleDocsDocsSplatRoute: LocaleDocsDocsSplatRoute,
}

const LocaleDocsRouteRouteWithChildren = LocaleDocsRouteRoute._addFileChildren(
  LocaleDocsRouteRouteChildren,
)

interface LocaleRootLayoutSettingsRouteRouteChildren {
  LocaleRootLayoutSettingsGalleryRoute: typeof LocaleRootLayoutSettingsGalleryRoute
  LocaleRootLayoutSettingsProfileRoute: typeof LocaleRootLayoutSettingsProfileRoute
  LocaleRootLayoutSettingsS3Route: typeof LocaleRootLayoutSettingsS3Route
  LocaleRootLayoutSettingsUploadRoute: typeof LocaleRootLayoutSettingsUploadRoute
  LocaleRootLayoutSettingsIndexRoute: typeof LocaleRootLayoutSettingsIndexRoute
}

const LocaleRootLayoutSettingsRouteRouteChildren: LocaleRootLayoutSettingsRouteRouteChildren =
  {
    LocaleRootLayoutSettingsGalleryRoute: LocaleRootLayoutSettingsGalleryRoute,
    LocaleRootLayoutSettingsProfileRoute: LocaleRootLayoutSettingsProfileRoute,
    LocaleRootLayoutSettingsS3Route: LocaleRootLayoutSettingsS3Route,
    LocaleRootLayoutSettingsUploadRoute: LocaleRootLayoutSettingsUploadRoute,
    LocaleRootLayoutSettingsIndexRoute: LocaleRootLayoutSettingsIndexRoute,
  }

const LocaleRootLayoutSettingsRouteRouteWithChildren =
  LocaleRootLayoutSettingsRouteRoute._addFileChildren(
    LocaleRootLayoutSettingsRouteRouteChildren,
  )

interface LocaleRootLayoutRouteRouteChildren {
  LocaleRootLayoutSettingsRouteRoute: typeof LocaleRootLayoutSettingsRouteRouteWithChildren
  LocaleRootLayoutGalleryRoute: typeof LocaleRootLayoutGalleryRoute
  LocaleRootLayoutUploadRoute: typeof LocaleRootLayoutUploadRoute
  LocaleRootLayoutIndexRoute: typeof LocaleRootLayoutIndexRoute
}

const LocaleRootLayoutRouteRouteChildren: LocaleRootLayoutRouteRouteChildren = {
  LocaleRootLayoutSettingsRouteRoute:
    LocaleRootLayoutSettingsRouteRouteWithChildren,
  LocaleRootLayoutGalleryRoute: LocaleRootLayoutGalleryRoute,
  LocaleRootLayoutUploadRoute: LocaleRootLayoutUploadRoute,
  LocaleRootLayoutIndexRoute: LocaleRootLayoutIndexRoute,
}

const LocaleRootLayoutRouteRouteWithChildren =
  LocaleRootLayoutRouteRoute._addFileChildren(
    LocaleRootLayoutRouteRouteChildren,
  )

interface LocaleRouteRouteChildren {
  LocaleDocsRouteRoute: typeof LocaleDocsRouteRouteWithChildren
  LocaleRootLayoutRouteRoute: typeof LocaleRootLayoutRouteRouteWithChildren
  LocalePhotoRoute: typeof LocalePhotoRoute
}

const LocaleRouteRouteChildren: LocaleRouteRouteChildren = {
  LocaleDocsRouteRoute: LocaleDocsRouteRouteWithChildren,
  LocaleRootLayoutRouteRoute: LocaleRootLayoutRouteRouteWithChildren,
  LocalePhotoRoute: LocalePhotoRoute,
}

const LocaleRouteRouteWithChildren = LocaleRouteRoute._addFileChildren(
  LocaleRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocaleRouteRoute: LocaleRouteRouteWithChildren,
  ApiSearchRoute: ApiSearchRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './main.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
